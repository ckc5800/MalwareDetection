import scipy.misc, os, array
import numpy as np
import math
import cv2
from PIL import Image

def get_feature_img(data_set = 'data', data_type = 'bytes'):
    data_list = os.listdir(data_set)
    data_list.sort()
    start = 0
    end = 1
    for i in range(start, end):
        file_id = data_list[i]
        read_binary = read_binaryfile(os.path.join(data_set, data_list[i]))
        hw = int(round(math.sqrt(len(read_binary))))
        feature_img = np.zeros((hw, hw), np.uint8)

        for y in range(0, hw) :
            for x in range(0, hw) :
                idx = x + (y * hw)
                if idx >= len(read_binary) :
                    feature_img[y, x] = 0
                else :
                    feature_img[y, x] = read_binary[idx]

        if hw < 300 :
            feature_img = cv2.resize(feature_img, (300,300), interpolation=cv2.INTER_CUBIC)

        file_name = os.path.join("data/total",file_id + ".jpg")
        print "%d/%d \t %s" % (i, len(data_list), file_name)
        #cv2.imwrite(file_name, feature_img)




def read_binaryfile(filename):
    binaryfile = open(filename,'rb')
    length = os.path.getsize(filename) # length of file in bytes
    width = 256
    uintarray = array.array("B") # uint8 array
    uintarray.fromfile(binaryfile,length)#-rem)
    binaryfile.close()
    uintarray = np.uint8(uintarray)

    print uintarray[0]
    return list(uintarray)

def read_image(filename) :
    image = cv2.imread(filename + ".txt.jpg")

    for y in range(image.shape[1]) :
        for x in range(image.shape[0]):


    listImg = list(image)
    uintarray = array.array("B")  # uint8 array
    #uintarray.fromlist(listImg)


if __name__ == '__main__':
    #get_feature_img(data_set = '/media/mmlab/hdd/MalwareDetector/data/Images/total', data_type = 'bytes')
    read_image('/home/mmlab/faster-rcnn/py-faster-rcnn/data/Malware_devkit/data/total/VirusShare_5c6c12b474eda3d55dfe72878fcc5f39')
    read_binaryfile('/home/mmlab/faster-rcnn/py-faster-rcnn/data/Malware_devkit/data/total/VirusShare_5c6c12b474eda3d55dfe72878fcc5f39')